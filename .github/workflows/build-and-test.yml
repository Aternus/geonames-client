name: "build and test"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  get-supported-php-versions:
    name: "Get supported PHP Versions"
    runs-on: ubuntu-latest
    outputs:
      extensions: ${{ steps.php-versions-matrix.outputs.extensions }}
      version: ${{ steps.php-versions-matrix.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - id: php-versions-matrix
        uses: WyriHaximus/github-action-composer-php-versions-in-range@v1

  build-and-test:
    environment: staging
    env:
      GEONAMES_USERNAME: ${{ secrets.GEONAMES_USERNAME }}
    needs:
      - get-supported-php-versions
    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php-version: ${{ fromJson(needs.get-supported-php-versions.outputs.version) }}
    runs-on: ${{ matrix.operating-system }}
    name: "Test PHP ${{ matrix.php-version }} running on ${{ matrix.operating-system }}"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ join(fromJson(needs.get-supported-php-versions.outputs.extensions), ',') }}

      - name: "Composer: Validate composer.json and composer.lock"
        run: composer validate --strict

      - name: "Composer: Cache packages"
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-

      - name: "Composer: Install dependencies"
        run: composer install --no-progress --no-interaction

      - name: "Validate Code Styling"
        run: composer aternus:style

      - name: "Execute Unit Tests"
        run: composer aternus:test
